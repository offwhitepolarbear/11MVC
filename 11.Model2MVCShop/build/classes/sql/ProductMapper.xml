<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="ProductMapper">
		
	<resultMap id="productMap" type="product">
		<result property="fileName" 		column="image_file" 			jdbcType="VARCHAR"/>
		<result property="manuDate"		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price" 				column="price" 					jdbcType="NUMERIC" />
		<result property="prodDetail" 		column="prod_detail" 			jdbcType="VARCHAR" />
		<result property="prodName" 		column="prod_name" 			jdbcType="VARCHAR" />
		<result property="prodNo" 			column="prod_no" 				jdbcType="NUMERIC" />
		<result property="regDate" 			column="reg_date" 				jdbcType="DATE" />
		<result property="proTranCode" 	column="tran_status_code" 	jdbcType="CHAR"  />
	
		<result property="stock" 				column="stock" 					jdbcType="NUMERIC" />
		<result property="salesVolume" 	column="sales_volume" 		jdbcType="NUMERIC" />
		
	</resultMap>
	
	<insert id="addProduct" parameterType="product" >
	
	 <selectKey keyProperty="prodNo" resultType="int" order="BEFORE">  
       SELECT seq_product_prod_no.nextval FROM DUAL
     </selectKey>
		INSERT INTO
		product (prod_no, prod_name, prod_detail, 
						manufacture_day, price, image_file, reg_date)
		VALUES (#{prodNo}, #{prodName}, #{prodDetail}, 
						#{manuDate}, #{price}, #{fileName}, SYSDATE)
					
	</insert>
	
	<insert id="addStock" parameterType="product" >
	INSERT INTO
	stock (prod_no, stock, sales_volume)
	VALUES (#{prodNo}, #{stock}, 0)
	</insert>
	
	<update id="restock" parameterType="product">
		UPDATE
		stock
		SET
		stock = (stock+${stock})
		WHERE prod_no = #{prodNo}
	</update>
	
	<update id="updateStock" parameterType="product">
		UPDATE
		stock
		SET
		stock = ${stock}
		WHERE prod_no = #{prodNo}
	</update>
	
	<select id="getProdNo" parameterType="product" resultType="int">
	
	SELECT
	prod_no
	FROM product
	WHERE
	prod_name = #{prodName}
	AND price = #{price}
	AND prod_detail = #{prodDetail}
	AND manufacture_day = #{manuDate}
	AND image_file	= #{fileName}
	</select>
	
	
	<select id="getProduct" parameterType="int" resultMap="productMap">
	SELECT
	pd.prod_no, pd.prod_name, pd.prod_detail,
	pd.manufacture_day, pd.price, pd.image_file,
	pd.reg_date, s.stock
	FROM product pd, stock s
	WHERE pd.prod_no=s.prod_no
	AND pd.prod_no = #{value}
	</select>
	
	<update id="updateProduct" parameterType="product" >
		UPDATE
		product 
		<set>
			prod_name= #{prodName},					  
			prod_detail =  #{prodDetail},
			manufacture_day = #{manuDate},
			price = #{price},
			image_file = #{fileName}
		</set>
		WHERE prod_no = #{prodNo}
	</update>
		
	<select  id="getProductList"  parameterType="search"	resultMap="productMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(		SELECT
	pd.prod_no, pd.prod_name, pd.prod_detail, 
	pd.manufacture_day, pd.price, pd.image_file,
	pd.reg_date, s.stock, s.sales_volume
	FROM product pd, stock s
	<where>
		pd.prod_no=s.prod_no
		<if test="searchCondition == 0 and searchKeyword !='' ">
			AND pd.prod_no like  '%' ||#{searchKeyword}|| '%'
		</if>
		<if test="searchCondition == 1 and searchKeyword !='' ">
			AND pd.prod_name like  '%' ||#{searchKeyword}|| '%'
		</if>
		<if test="searchCondition == 2 and searchKeyword !='' ">
			AND pd.price like  '%' ||#{searchKeyword}|| '%'
		</if>
	</where>
		ORDER BY
		<if test= " orderBy == 0 ">
		 pd.prod_no DESC
		</if>
		<if test= " orderBy == 1 ">
		pd.price
		</if>
		<if test= " orderBy == 2 ">
		pd.price DESC
		</if>
		 ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT pd.prod_no, s.stock
						FROM product pd, stock s
	<where>
		pd.prod_no=s.prod_no
		
		<if test="searchCondition == 0 and searchKeyword !='' ">
			AND pd.prod_no like  '%' ||#{searchKeyword}|| '%'
		</if>
		<if test="searchCondition == 1 and searchKeyword !='' ">
			AND pd.prod_name like  '%' ||#{searchKeyword}|| '%'
		</if>
		<if test="searchCondition == 2 and searchKeyword !='' ">
			AND pd.price like  '%' ||#{searchKeyword}|| '%'
		</if>
	</where>
						 ) countTable						
	 </select>
	
	</mapper>