<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="PurchaseMapper">

<resultMap id="purchaseMap" type="purchase">
	<result property="buyer.userId" 			column="buyer_id" />

	<result property="purchaseProd.prodNo" 			column="prod_no" />	
	<result property="purchaseProd.prodName" 	column="prod_name" />
	<result property="purchaseProd.price" 				column="price" />
	<result property="purchaseProd.fileName" 		column="image_file" />
	<result property="purchaseProd.prodDetail" 	column="prod_detail" />
			
	<result property="divyAddr"				column="demailaddr" 			jdbcType="VARCHAR" />
	<result property="divyDate" 			column="dlvy_date" 				jdbcType="DATE" />
	<result property="divyRequest" 		column="dlvy_request" 		jdbcType="VARCHAR" />
	<result property="orderDate" 			column="order_data" 			jdbcType="DATE" />
	<result property="paymentOption"	column="payment_option" 	jdbcType="CHAR" />
	<result property="receiverName" 		column="receiver_name" 		jdbcType="VARCHAR"  />
	<result property="receiverPhone" 	column="receiver_phone" 	jdbcType="VARCHAR"  />
	<result property="tranCode" 			column="tran_status_code" 	jdbcType="CHAR"  />
	<result property="tranNo" 				column="tran_no" 				jdbcType="NUMERIC"  />

	<result property="stock" 					column="stock" 					jdbcType="NUMERIC"  />
	<result property="products"				column="products"				jdbcType="VARCHAR" />
</resultMap>

	<insert id="addPurchase" parameterType="purchase" >
	
	<selectKey keyProperty="tranNo" resultType="int" order="BEFORE">  
       SELECT seq_transaction_tran_no.nextval FROM DUAL
     </selectKey>
	INSERT INTO
	transaction ( tran_no, products, buyer_id,
						 payment_option, receiver_name, receiver_phone,
						 demailaddr, dlvy_request, tran_status_code,
						 order_data, dlvy_date )
	VALUES ( #{tranNo}, #{products}, #{buyer.userId},
					 #{paymentOption},	#{receiverName}, #{receiverPhone},
					  #{divyAddr}, #{divyRequest}, 1,
					  SYSDATE, #{divyDate} )
	</insert>
	
	<update id="sold" parameterType="product">
		UPDATE
		stock
		<set>
		stock = (stock-#{stock}), sales_volume = (sales_volume+#{stock})
		</set>
		WHERE prod_no = #{prodNo}
	</update>
	
	<update id="orderCancel" parameterType="purchase">
		UPDATE
		stock
		<set>
		stock = (stock+#{stock}), sales_volume = (sales_volume-#{stock})
		</set>
		WHERE prod_no = #{purchaseProd.prodNo}
	</update>
		
	<select id="getPurchase" parameterType="int" resultMap="purchaseMap">
	SELECT
	tr.tran_no, tr.buyer_id, tr.payment_option, tr.receiver_name,
	tr.receiver_phone, tr.demailaddr, tr.order_data, tr.dlvy_date, tr.dlvy_request,
	tr.tran_status_code, tr.products
	FROM
	transaction tr
	WHERE
	tr.tran_no = #{value}
	</select>
	
	<select id="getPurchase2" parameterType="int" resultMap="purchaseMap">
	SELECT
	tran_no, prod_no, buyer_id, payment_option, receiver_name,
	receiver_phone, demailaddr,order_data, dlvy_date, dlvy_request, tran_status_code, stock
	FROM transaction 
	WHERE
	prod_no = #{value}
	</select>
	
	<update id="updatePurchase" parameterType="purchase" >
		UPDATE
		transaction 
		<set>
			payment_option = #{paymentOption},
			receiver_name = #{receiverName},
			receiver_phone = #{receiverPhone},
			demailaddr = #{divyAddr},
			dlvy_request = #{divyRequest},
			dlvy_date = #{divyDate}
		</set>
		WHERE tran_no = #{tranNo}
	</update>
	
	<update id="updateTranCode" parameterType="purchase" >
	UPDATE
	transaction 
	<set>
	 tran_status_code = #{tranCode}
	</set>
	WHERE tran_no = #{tranNo}
	</update>
	
	<update id="updateTranCode2" parameterType="purchase" >
	UPDATE
	transaction 
	<set>
	 tran_status_code = #{tranCode}
	</set>
	WHERE prod_no = #{purchaseProd.prodNo}
	</update>
	
	<select  id="getPurchaseList"  parameterType="search"	resultMap="purchaseMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(		SELECT
	tran_no, products, buyer_id, payment_option, receiver_name,
	receiver_phone, demailaddr, dlvy_request, tran_status_code
	FROM transaction
	<where>
	buyer_id = #{searchKeyword}
	</where>
		ORDER BY tran_no DESC ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT tran_no
						FROM transaction
						<where>
	buyer_id = #{searchKeyword}
	</where>
					) countTable						
	 </select>
	
	<select  id="getSaleList"  parameterType="search"	 resultMap="purchaseMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT
	  	tr.tran_no, pd.prod_name, pd.price, pd.prod_no,
	  	tr.buyer_id, tr.demailaddr, tr.dlvy_request, tr.tran_status_code, tr.stock
	  	FROM product pd, transaction tr
	  	WHERE pd.prod_no=tr.prod_no
	  	<if test="listSale==0">
	  	AND tr.tran_status_code IS NOT NULL
	  	</if>
		<if test="listSale==1">
		AND tr.tran_status_code =1
		</if>
		<if test="listSale==2">
		AND tr.tran_status_code =2
		</if>
		<if test="listSale==3">
		AND tr.tran_status_code =3
		</if>
		<if test="listSale==4">
		AND tr.tran_status_code =4
		</if>
	  	ORDER BY tran_no DESC ) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 <select  id="getSaleCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT tran_no
						FROM transaction
						WHERE 
						<if test="listSale==0">
						tran_status_code IS NOT NULL
						</if>
						<if test="listSale==1">
						tran_status_code =1
						</if>
						<if test="listSale==2">
						tran_status_code =2
						</if>
						<if test="listSale==3">
						tran_status_code =3
						</if>
						<if test="listSale==4">
						tran_status_code =4
						</if>
					) countTable						
	 </select>
	
	</mapper>